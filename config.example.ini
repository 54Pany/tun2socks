[general]
# inet addr/mask
# DEFAULT VALUE: 198.18.0.0/15
# network = 198.18.0.0/15

# DEFAULT VALUE: 1500
# mtu = 1500

[pprof]
# enabled = true
# prof-host = 127.0.0.1
# prof-port = 6060

[dns]
# dns mode: fake or udp_relay_via_socks5, default fake, fake means google.com -> 10.192.10.126
# dns-mode = udp_relay_via_socks5

# DEFAULT VALUE: 53
# dns-port = 53

# backend dns
# DEFAULT VALUE: 114.114.114.114:53, 223.5.5.5:53
# nameserver = 172.16.100.200:53
# nameserver = 172.16.100.202:53

# dns-ttl = 600
# dns-packet-size = 4096
# dns-read-timeout = 5
# dns-write-timeout = 5

[route]
# eg: sudo ip route add 91.108.4.0/22 dev tun0
v = 198.18.0.0/15
v = 91.108.4.0/22
v = 91.108.56.0/22
v = 109.239.140.0/24
v = 149.154.160.0/20
v = 149.154.167.0/24
v = 8.8.8.8
v = 4.4.4.4

[udp]
# Enable udp relay or not, default true
# enabled = false

# This proxy is used to relay udp data via socks5, so it must be socks5 with udp support.
# If dns-mode is udp_relay_via_socks5, tun2socks will use this proxy to relay.
# If dns-mode is fake, tun2socks will use the fake domain matched proxy, also || this one.
proxy = B

# define a proxy named "A"
[proxy "A"]
url = socks5://127.0.0.1:1090

# define a proxy named "B"
[proxy "B"]
url = socks5://127.0.0.1:1080
default = yes

# define a pattern and outbound proxy

# block is a special proxy, it will be closed
[pattern "block-website"]
proxy = block
scheme = DOMAIN-SUFFIX
v = adsence.sogou.com
v = 123.sogou.com
v = google-analytics.com
v = fonts.googleapis.com


[pattern "direct-website"]
scheme = DOMAIN-SUFFIX
v = cn
v = apple.com
v = ruby-china.org
v = tower.im
v = v2ex.org
v = archlinuxcn.org
v = oschina.net
v = igexin.com
v = gepush.com
v = getui.net
v = weibo.com
v = renren.com
v = so.com
v = jd.com
v = kuaidi100.com
v = upaiyun.com
v = office.com
v = akadns.net
v = live.com
v = apple-dns.net
v = lipuwater.com

[pattern "direct-website-keyword"]
scheme = DOMAIN-KEYWORD
v = baidu
v = qq
v = v2ex
v = 126
v = 163
v = sogou
v = 360
v = csdn
v = qcloud
v = lagou
v = jianshu
v = cnzz
v = cnblogs
v = duoshuo
v = taobao
v = alipay
v = aliyun
v = douban
v = tudou
v = xiaomi
v = weibo
v = youku
v = zhihu
v = iqiyi
v = wenwen

[pattern "proxy-website"]
proxy = B
scheme = DOMAIN-SUFFIX
v = twitter.com
v = facebook.com
v = kernel.org
v = linkedin.com
v = virtualbox.org
v = atom.io
v = spring.io
v = rubygems.org
v = schmorp.de
v = tst.eu
v = valgrind.org
v = golang.org
v = golangbridge.org

[pattern "proxy-website-keyword"]
proxy = B
scheme = DOMAIN-KEYWORD
v = google
v = gmail
v = stackoverflow
v = jetbrains
v = npmjs
v = adobe
v = disqus
v = twitter
v = twimg
v = instgram
v = facebook
v = youtube
v = github
v = gitbook
v = gitter
v = sourceforge
v = cloudfront
v = newrelic
v = jrebel


[pattern "direct-country"]
scheme = IP-COUNTRY
v = CN

# @see https://tools.ietf.org/html/rfc1918
[pattern "internal-ip"]
scheme = IP-CIDR
v = 10.0.0.0/24
v = 172.16.0.0/20
v = 192.168.0.0/16

[pattern "proxy-country"]
proxy = B
scheme = IP-COUNTRY
v = US
v = HK

# rules define the order of checking pattern
[rule]
pattern = block-website
pattern = direct-website
pattern = direct-website-keyword
pattern = proxy-website
pattern = proxy-website-keyword
pattern = direct-country
pattern = internal-ip
pattern = proxy-country
# set to a proxy for domaines that don't match any pattern
# DEFAULT VALUE: ""
final = B
